#create and print graph using adjacency matrix representation of delete node in undirected graph 
def addnode(v):
    global nodecount
    if v in nodes:
        print(v,"is already available")
    else:
        nodes.append(v)
        nodecount=nodecount+1
        for x in graph:
            x.append(0)
        temp=[]
        for i in range(nodecount):
            temp.append(0)
        graph.append(temp)

def show():
    for i in range(nodecount):
        for j in range(nodecount):
            print(graph[i][j],end=" ")
        print()
       
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not present in graph")
    elif node2 not in nodes:
        print(node2,"is not present in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=1
        graph[j][i]=1
def delete(d):
    global nodecount
    s=nodes.index(d)
    nodecount-=1
    
    graph.pop(s)
    for i in  graph:
        i.pop(s)
    nodes.pop(s)
nodes=[]
graph=[]
nodecount=0
while True:
    print()
    print("1.add node \n 2.addedge\n 3.print\n4.delete\n 5.exit\n")
    ch=int(input("enter your choice"))
    if ch==1:
        x=input("enter node")
        addnode(x)
    elif ch==2:
        node1=input("enter first node")
        node2=input("enter second node")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        d=input("enter the node which is to be delete")
        delete(d)
    elif ch==5:
        break
    else:
        print("invaild choice")


output:-
1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter nodea

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter nodeb

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter nodec

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter noded

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter nodee

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first nodea
enter second nodeb

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first nodeb
enter second nodec

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first nodec
enter second noded

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first noded
enter second nodea

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first noded
enter second nodee

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice2
enter first nodec
enter second nodea

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice3
0 1 1 1 0 
1 0 1 0 0 
1 1 0 1 0 
1 0 1 0 1 
0 0 0 1 0 

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice4
enter the node which is to be deletec

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice3
0 1 1 0 
1 0 0 0 
1 0 0 1 
0 0 1 0 

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice1
enter nodec

1.add node 
 2.addedge
 3.print
4.delete
 5.exit

enter your choice